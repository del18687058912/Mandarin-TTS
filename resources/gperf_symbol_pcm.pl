# use gperf to generate Chinese symbol pcm hash table

use strict;
use utf8;

open(SYMBOL_ARRAY, '>', 'symbol_array.cpp');
printf SYMBOL_ARRAY "// Don't edit. This file is generated by gperf_symbol_pcm.pl\n";
printf SYMBOL_ARRAY "#include \"stdafx.h\"\n";
printf SYMBOL_ARRAY "#include \"dictionary.h\"\n";
printf SYMBOL_ARRAY "PhoneticSymbol Dict::m_SymbolArray[MAX_SYMBOL_ARRAY_SIZE] = {\n";

#===== generate SYMBOL_PCM ===== 
open(DICT, '>', 'symbol_map');
printf DICT "\%{\n";
printf DICT '#include "stdafx.h"', "\n";
printf DICT "\n\%}\n";
printf DICT "struct SymbolCode {\n";
printf DICT "   const char *name;\n";
printf DICT "   int code;\n";
printf DICT "};\n";
printf DICT "\n\%\%\%\n";
my @files = `ls -1 ./pinyin`;
my $index = 0;
for my $file (@files) {
  chomp($file);
  if ($file =~ /^([a-z0-9]*)\.wav$/) {
    printf DICT "$1, $index\n";
    printf SYMBOL_ARRAY "PhoneticSymbol(\"$1\"), ";
    $index++;
  }
}

close(DICT);
sleep(1);
system("gperf -L C++ -t symbol_map >symbol_map.h");
sleep(1);
system("rm symbol_map");

printf SYMBOL_ARRAY "\n};\n";
close(SYMBOL_ARRAY);

